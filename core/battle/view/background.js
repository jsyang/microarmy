// Generated by CoffeeScript 1.4.0

define(['core/util/$'], function($) {
  var hs2d;
  hs2d = function(hs, color) {
    var index;
    index = {
      'r': 0,
      'g': 2,
      'b': 4
    };
    index = index[color];
    return parseInt(hs.slice(index, index + 2), 16);
  };
  return function(world) {
    var c, cB, cG, cR, canvas, color, ctx, d, dB, dG, dR, dSurface, h_, imgdata, rgb1, rgb2, rgbT, terrainColor, terrainGradient, x, y, _i, _j, _k, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
    if (!(world != null)) {
      throw new Error('no world given');
    }
    canvas = document.createElement('canvas');
    canvas.className = 'noselect';
    canvas.width = world.w;
    canvas.height = world.h;
    ctx = canvas.getContext('2d');
    imgdata = ctx.createImageData(world.w, world.h);
    d = imgdata.data;
    color = [["112111", "acacac"], ["442151", "ffac2c"], ["F2F8F8", "848B9A"]][$.R(0, 2)];
    terrainColor = ["7DA774", "5D3825", "8498A4", "ADA159", "9F9973"][$.R(0, 4)];
    rgbT = {
      r: hs2d(terrainColor, 'r'),
      g: hs2d(terrainColor, 'g'),
      b: hs2d(terrainColor, 'b')
    };
    terrainGradient = [];
    for (y = _i = 0, _ref = world.h; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {
      terrainGradient.push({
        r: rgbT.r - y,
        g: rgbT.g - y,
        b: rgbT.b - y
      });
    }
    rgb1 = {
      r: hs2d(color[0], 'r'),
      g: hs2d(color[0], 'g'),
      b: hs2d(color[0], 'b')
    };
    rgb2 = {
      r: hs2d(color[1], 'r'),
      g: hs2d(color[1], 'g'),
      b: hs2d(color[1], 'b')
    };
    h_ = 1 / world.h;
    _ref1 = [rgb1.r, rgb1.g, rgb1.b], cR = _ref1[0], cG = _ref1[1], cB = _ref1[2];
    _ref2 = [rgb2.r - rgb1.r, rgb2.g - rgb1.g, rgb2.b - rgb1.b], dR = _ref2[0], dG = _ref2[1], dB = _ref2[2];
    _ref3 = [dR * h_, dG * h_, dB * h_], dR = _ref3[0], dG = _ref3[1], dB = _ref3[2];
    for (y = _j = 0, _ref4 = world.h; 0 <= _ref4 ? _j < _ref4 : _j > _ref4; y = 0 <= _ref4 ? ++_j : --_j) {
      for (x = _k = 0, _ref5 = world.w; 0 <= _ref5 ? _k < _ref5 : _k > _ref5; x = 0 <= _ref5 ? ++_k : --_k) {
        c = 4 * (y * world.w + x);
        dSurface = world.heightmap[x];
        if (dSurface > 0) {
          if (y < dSurface) {
            d[c + 0] = Math.round(cR);
            d[c + 1] = Math.round(cG);
            d[c + 2] = Math.round(cB);
          } else {
            color = terrainGradient[y - dSurface];
            d[c + 0] = color.r;
            d[c + 1] = color.g;
            d[c + 2] = color.b;
          }
        }
        d[c + 3] = 0xFF;
      }
      _ref6 = [cR + dR, cG + dG, cB + dB], cR = _ref6[0], cG = _ref6[1], cB = _ref6[2];
    }
    ctx.putImageData(imgdata, 0, 0);
    return canvas;
  };
});
